# -*- coding: utf-8 -*-
"""Oasis DA Intern Lv1 Task3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12ubLKOvOJifOanJsWZQDyZ3VHZ46MUc8

# **CLEANING DATA USING 1ST DATASET**

# **Loading the Dataset**
"""

from google.colab import files
import pandas as pd
uploaded = files.upload()
df = pd.read_csv("AB_NYC_2019.csv")
pd.set_option('display.max_columns', None)
pd.set_option('display.max_rows', None)
pd.set_option('display.expand_frame_repr', False)
df.head()

"""# **Data Integrity**"""

import pandas as pd
file_path = "/content/AB_NYC_2019.csv"
df = pd.read_csv(file_path)
print("Dataset Info:")
df.info()
print("\nSummary Statistics:")
print(df.describe(include="all"))
categorical_columns = df.select_dtypes(include=['object']).columns
for col in categorical_columns:
    print(f"\nUnique values in {col}:")
    print(df[col].unique()[:10])

"""# **Missing Data Handling**"""

print("\nMissing Values Before Handling:")
print(df.isnull().sum())
df.fillna(df.median(numeric_only=True), inplace=True)
df.dropna(inplace=True)
print("\nMissing Values After Handling:")
print(df.isnull().sum())

"""# **Duplicate Removal**"""

print(f"\nNumber of duplicates before: {df.duplicated().sum()}")
df.drop_duplicates(inplace=True)
print(f"Number of duplicates after: {df.duplicated().sum()}")

"""# **Standardization**"""

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
numerical_features = ["price", "minimum_nights", "number_of_reviews",
                      "reviews_per_month", "calculated_host_listings_count", "availability_365"]
df[numerical_features] = scaler.fit_transform(df[numerical_features])
print("\nStandardization Complete! Hereâ€™s a preview:")
display(df[numerical_features].head())

"""# **Outlier Detection**

"""

from scipy.stats import zscore
import numpy as np
df = df[(np.abs(zscore(df[numerical_features])) < 3).all(axis=1)]
print("\nOutliers removed! New dataset shape:", df.shape)

"""# ***CLEANING DATA USING 2ND DATASET***

# **Loading the Dataset**
"""

from google.colab import files
import pandas as pd
uploaded = files.upload()
df=pd.read_csv("CA_category_id.json")
df.head()

"""# **Data Integrity**"""

print("Dataset Information:\n")
print(df.info())
print("\nMissing Values in Each Column:\n", df.isnull().sum())
print("\nNumber of Duplicate Rows:", df.duplicated().sum())
if not df.empty:
    print("\nBasic Statistics:\n", df.describe(include="all"))

"""# **Missing Data Handling**"""

print("\nMissing Values Before Handling:\n", df.isnull().sum())
df.fillna({"snippet.title": "Unknown"}, inplace=True)
print("\nMissing Values After Handling:\n", df.isnull().sum())

"""# **Duplicate Removal**"""

print("\nDuplicate Rows Before Removal:", df.duplicated().sum())
df.drop_duplicates(inplace=True)
print("Duplicate Rows After Removal:", df.duplicated().sum())

"""# **Standardization**"""

print("Columns in DataFrame:", df.columns)
if "snippet.title" in df.columns:
    df.rename(columns={"snippet.title": "category_title"}, inplace=True)
if "snippet.channelId" in df.columns:
    df.rename(columns={"snippet.channelId": "channel_id"}, inplace=True)
if "id" in df.columns:
    df["id"] = pd.to_numeric(df["id"], errors="coerce")
    df.rename(columns={"id": "category_id"}, inplace=True)
if "category_title" in df.columns:
    df["category_title"] = df["category_title"].str.strip().str.lower()
print("\nStandardized Data:\n", df.head())

"""# **Outlier Detection**"""

import matplotlib.pyplot as plt
import seaborn as sns
if "category_id" in df.columns:
    plt.figure(figsize=(8, 5))
    sns.boxplot(x=df["category_id"])
    plt.title("Boxplot of Category IDs")
    plt.xlabel("Category ID")
    plt.show()
    Q1 = df["category_id"].quantile(0.25)
    Q3 = df["category_id"].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    outliers = df[(df["category_id"] < lower_bound) | (df["category_id"] > upper_bound)]
    print("\nOutliers Detected:\n", outliers)
else:
    print("Error: 'category_id' column not found in the DataFrame. Available columns:", df.columns)

print("\nCleaned Dataset:\n")
print(df.head())
print("\nDataset Summary:\n")
print(df.describe(include="all"))